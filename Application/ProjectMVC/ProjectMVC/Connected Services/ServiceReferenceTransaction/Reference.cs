//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectMVC.ServiceReferenceTransaction {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceTransaction.WebServiceTransactionSoap")]
    public interface WebServiceTransactionSoap {
        
        // CODEGEN: Generating message contract since element name date from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTransaction", ReplyAction="*")]
        ProjectMVC.ServiceReferenceTransaction.AddTransactionResponse AddTransaction(ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<ProjectMVC.ServiceReferenceTransaction.AddTransactionResponse> AddTransactionAsync(ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddTransaction", Namespace="http://tempuri.org/", Order=0)]
        public ProjectMVC.ServiceReferenceTransaction.AddTransactionRequestBody Body;
        
        public AddTransactionRequest() {
        }
        
        public AddTransactionRequest(ProjectMVC.ServiceReferenceTransaction.AddTransactionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddTransactionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int toAccount;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int fromAccount;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int amount;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string date;
        
        public AddTransactionRequestBody() {
        }
        
        public AddTransactionRequestBody(int toAccount, int fromAccount, int amount, string date) {
            this.toAccount = toAccount;
            this.fromAccount = fromAccount;
            this.amount = amount;
            this.date = date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddTransactionResponse", Namespace="http://tempuri.org/", Order=0)]
        public ProjectMVC.ServiceReferenceTransaction.AddTransactionResponseBody Body;
        
        public AddTransactionResponse() {
        }
        
        public AddTransactionResponse(ProjectMVC.ServiceReferenceTransaction.AddTransactionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddTransactionResponseBody {
        
        public AddTransactionResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceTransactionSoapChannel : ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceTransactionSoapClient : System.ServiceModel.ClientBase<ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap>, ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap {
        
        public WebServiceTransactionSoapClient() {
        }
        
        public WebServiceTransactionSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceTransactionSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceTransactionSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceTransactionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ProjectMVC.ServiceReferenceTransaction.AddTransactionResponse ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap.AddTransaction(ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest request) {
            return base.Channel.AddTransaction(request);
        }
        
        public void AddTransaction(int toAccount, int fromAccount, int amount, string date) {
            ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest inValue = new ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest();
            inValue.Body = new ProjectMVC.ServiceReferenceTransaction.AddTransactionRequestBody();
            inValue.Body.toAccount = toAccount;
            inValue.Body.fromAccount = fromAccount;
            inValue.Body.amount = amount;
            inValue.Body.date = date;
            ProjectMVC.ServiceReferenceTransaction.AddTransactionResponse retVal = ((ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap)(this)).AddTransaction(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ProjectMVC.ServiceReferenceTransaction.AddTransactionResponse> ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap.AddTransactionAsync(ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest request) {
            return base.Channel.AddTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ProjectMVC.ServiceReferenceTransaction.AddTransactionResponse> AddTransactionAsync(int toAccount, int fromAccount, int amount, string date) {
            ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest inValue = new ProjectMVC.ServiceReferenceTransaction.AddTransactionRequest();
            inValue.Body = new ProjectMVC.ServiceReferenceTransaction.AddTransactionRequestBody();
            inValue.Body.toAccount = toAccount;
            inValue.Body.fromAccount = fromAccount;
            inValue.Body.amount = amount;
            inValue.Body.date = date;
            return ((ProjectMVC.ServiceReferenceTransaction.WebServiceTransactionSoap)(this)).AddTransactionAsync(inValue);
        }
    }
}
